# Generated by Django 2.2.7 on 2019-12-09 09:49
import sys

from django.db import migrations
from django.db.models import Sum


def forward(apps, schema_editor):
    # validate warehouse number
    Warehouse = apps.get_model("warehouse", "Warehouse")
    ProductVariant = apps.get_model("product", "ProductVariant")
    Stock = apps.get_model("stock", "Stock")

    if not Warehouse.objects.exists():
        print("Please create Warehouse before proceeding.")
        sys.exit(1)
    warehouse = Warehouse.objects.first()
    stocks = []
    for variant in ProductVariant.objects.iterator():
        stocks.append(
            Stock(
                warehouse=warehouse,
                product_variant=variant,
                quantity=variant.quantity,
                quantity_allocated=variant.quantity_allocated,
            )
        )
    Stock.objects.bulk_create(stocks)


def backward(apps, schema_editor):
    ProductVariant = apps.get_model("product", "ProductVariant")
    Stock = apps.get_model("stock", "Stock")

    variants = []
    stocks = (
        Stock.objects.values("product_variant_id")
        .annotate(quantity_sum=Sum("quantity"))
        .annotate(quantity_allocated_sum=Sum("quantity_allocated"))
    )
    for variant in ProductVariant.objects.iterator():
        variant_dict = stocks.get(product_variant=variant)
        variant.quantity = variant_dict["quantity_sum"]
        variant.quantity_allocated = variant_dict["quantity_allocated_sum"]
        variants.append(variant)
    ProductVariant.objects.bulk_update(variants, ["quantity", "quantity_allocated"])
    Stock.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("product", "0110_auto_20191108_0340"),
        ("warehouse", "0003_auto_20191206_0600"),
        ("stock", "0001_initial"),
    ]

    operations = [migrations.RunPython(forward, migrations.RunPython.noop)]
